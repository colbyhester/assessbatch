**********BATCHTABLE COMPONENT**********

This component is used to display the list of all trainees that are associated with a given batch. On the
component, there are multiple columns displaying the name of the trainee, any grades for assessments that 
were given for a given week, as well as any notes made by their trainer to describe their overall performance.
In order to show all the rows for each trainee, the batchTableRow component is nested within this component 
equal to the number of trainees there are for the specified batch. For more information about that component,
please refer to its corresponding documentation.

**CONTROLLERS**

1. BATCHTABLECONTROLLER.APXC

This is the server-side controller for the batchTable component, which allows it to communicate with the database.
Within it are several of the core methods needed to display the correct information within the table, such as the
trainees for the given batch, as well as their grades and notes. Below we will given a brief rundown on each 
method(which is also provided in the code for each class as well) to help give a better understanding on how and 
when to call each of them. 

GETBATCH

This method is used to return the name and number of weeks for a specified batch, as those are not fields that the 
client-side controller has available by default. It requires a batch Id to be passed into it from the component 
in order to query for the correct records that need to be returned. 

Parameters: Id of batch you want to get information on

INCREMENTWEEK

This method raises the value of the number of weeks for a batch by one. This is used to give room for a new week 
to be added to the Week Tab at the top of the page. In order to specify which batch is going to have this change
made on it, this method requires the component to pass the Training__c object to modify directly. 

Parameters: Training__c record to be updated

GETASSOCIATES

This method is used to get a list of all the Contacts(trainees) associated with a given Training__c(batch). As
mentioned, it takes in an Id equal to the one of the batch you want to get the list from. Using this Id, it then
cycles through all the Contacts in the database and saves a list of all the ones who are linked to the batch that
has the Id, which is then returned to the user. 

Parameters: Id of the batch you want to pull trainees from

GETNOTE

This method is used to get the note that is associated to a specified Contact and week number, which are passed in
as parameters. Using these values, it cycles through all existing notes to find the one that is linked to the 
trainee and week in question. If one does exist, it is returned to the user. If one does not already exist, then 
one is created with no contents and associated with the trainee and week number specified in the parameters. This 
ensures that even if no note was made yet for a trainee during a certain week, there would always be one available
to edit for the trainer. 

Parameters: Decimal of week number, Id of associate

SAVENOTE

This method takes in a Caliber_Note__c object as a parameter that has been modified by a user within the 
component, and simply updates it. After the update has been committed to the database, it is returned to the
user. 

Parameters: Id of note you are updating

GETASSESSMENTS

This method is used to get all the assessments for a given batch and week number. It results in a list that is 
returned to the component that is used to generate all the assessment records shown to users on the page. It is 
the main method for allowing users to enter grades for these assessments, as it is this list that determines 
which ones to have editable. 

Parameters: batch Id, Decimal week number

GETGRADES

This method is used to get a list of all the grades for all the assessments in the batch. This is one of the 
methods that is first called to get all the information onto the page so as to reduce the amount of server calls 
needed after the page is loaded. In order to obtain these records, the method must be passed a list of assessments 
for it to iterate through and find grades for. 

Parameters: List of Caliber_Assessment__c records to find grades for 

GETBATCHNOTE

This method is used to retrieve the overall feedback note left for an entire batch by their trainer. The result 
is sent back to the server to display on the page. If a note does not currently exist for a given batch and week, 
it is then created and associated with those parameters, saved, and then returned to the component. The component
then reads the contents of the note and displays them in the field.

Parameters: Decimal week number, Id of batch that the note is associated with 

POINTSTOPERCENT

This method is used to convert the Max_Points__c field on an assessment into its percentage of the total number 
of points between all the assessments for a particular week. This value is then sent back to the component to be 
displayed underneath the name of the assessment on the table. This allows trainers to see the weight of an 
assessment compared to the others for the week to guage how important it is overall. 

Parameters: List of all Caliber_Assessment__c records, Integer index of assessment we are interested in 

SECTIONAVERAGE

This method is used to calculate the average grade value for a given assessment, which is then displayed on the 
bottom of the page for that assessment's column. This is done by taking all of Caliber_Grade__c records that are 
linked to a given assessment, and taking the avergae of their Score__c fields, which is then returned to the 
component. 

Parameters: List of all Caliber_Grade__c records, Id of the assessment we want the average of 

WEEKLYBATCHAVERAGE

This method is used to find the average scores for all trainees between all the different assessments that were 
created for a given week. This allows trainers to see all how the batch is performing overall, as opposed to for 
one specific assessment. The average is found by taking all the assessments for the week, finding average for 
each assessment, and then taking the total average of all those values. 

Parameters: List of all Caliber_Assessment__c records for a given week 

DELETING

This method is used to delete a specified assessment from the database, removing it from the table as well. It 
requires the Id of the assessment that is needing to be deleted. 

Parameters: Id of assessment 

UPDATING

This method is used to update the information of an assessment in case a trainer wants to adjust it's weight, 
category, or type after it has already been created. It requires the assessment that needs to be 
updated in order to query for the correct record. 

Parameters: Caliber_Assessment__c record that is being updated 

GETCAT 

This method is used to return a list of all the Caliber_Category__c records in the database, which is then used 
in the process of creating new assessments. There is no required parameters, as the method is simply pulling all 
different records without any criteria. 

Parameters: None 

2. BATCHTABLECONTROLLER.JS

This is the client-side controller for the component. It is responsible for sending requests to the server-side 
component and handling the results of those calls. Its main purpose is to fetch a list of the trainees, notes, 
assessments, and grades for the table to be displayed. Below are a list of all the functions that are within this 
controller and what they do. 

UPDATEIT

This funstion is responsible for updating the fields of an assessment after a user makes changes to it. This is 
done by passing the new fields into the "updating" method in the server-side controller, which then makes the 
dml statement to update those fields within the database. Once the update is done, the result is then sent back 
to the client-side controller, where it is set to replace the old version of the assessment. This allows the new 
values to be displayed once the component is refreshed. 

Methods called: updating 
Parameters: Caliber_Assessment__c record that needs to be updated 

CLOSEMODAL

As the name implies, this function is in charge of closing the assessment modal once any actions that needed to 
be completed have been done. This then refreshes the component with any changes in place. 

Methods called: None
Parameters: None 

OPENMODAL

This function is responsible for opening the assessment modal that is needed to either create, edit, or delete 
an assessment for the page. It is called when the user either clicks the "Create Assessment" button, or clicks on
an assessment itself in order to edit/delete one. 

Methods called: None 
Parameters: None 

WEEKCHANGE

This is the function that handles changing the week that needs to be displayed on the table. It is called when 
the WeekChangeEvent event is fired and picked up by the batchTable component. It takes the value from the "week" 
attribute in the event and saves its contents into the "week" attribute in the batchTable component. This then 
triggers a component refresh, with the new week being shown instead. 

Methods called: None 
Parameters: None 

DELETIT

This function is used to delete an assessment from the database, and is called when a user clicks the "Delete" 
button after selecting an assessment from the page. It then calls the "deleting" method from the server-side 
controller, which handles the actual deletion of the record. Afterwards the component is reloaded to display the 
updated list of assessments. 

Methods called: deleting 
Parameters: Id of assessment being deleted

DOINIT

This is the initial function that is immediately ran upon loading the component, and is responsible for fetching
all the associates needed for the table being shown by calling the getAssociates method in the server-side 
controller. This list is then sent back to the component to be used in generating all the different batchTableRow 
components for each trainee that is returned. 

Method called: getAssociates
Parameters(for server-side controller): Id of batch being sent to Apex controller

HANDLESAVE

This function is responsible for saving the contents of a Caliber_Note__c after it has been updated by a trainer. 
It calls the "saveNote" method in the Apex controller, passes it the note that has been changed, and then lets 
that method update the contents and return the results. It then sets the value of the updated note into the old 
version to have it changed on the page for good. 

Methods called: saveNote 
Parameters: Caliber_Note__c record that needs to be updated/saved 

ADDHEADER

This function handles adding the weight percentage of each assessment to display below its name. It finds this 
value by calling the PointstoPercent method from the server-side controller after passing it the list of 
assessments, as well as the index number of the assessment in that list. The server then calculates the weighted 
percentage for the assessment and returns it back to the component to display. 

Methods called: PointstoPercent
Parameters: List of assessments, index number of assessment needing the percentage 

REFRESH 

This is a generic function that is meant to refresh the component after any changes have been made that need to 
be displayed. It calls a function in the helper that essentially rerenders the entire table after checking the 
new values that have been altered, thus showing a trainer all the new values they want. This is done by running 
several of the getter methods within the Apex controller to fetch all the relevant information needed to rebuild 
the table. 

Methods called: refreshDataTable --> getAssociates, getAssessments, getCat, getBatchNote
Parameters: Technically none, as these methods are called automatically without feeding "refresh" any up front

****HELPER****

SETGRADES

This helper function is responsible for setting the values of the grades for each assessment, for each trainee. 
It calls the getGrades method in the server-side controller to obtain a list of all the grades in the database. 
It then uses the list of grades to populate the fields within the table with all the current grade values. 

Methods called: getGrades, sectionAverage, weeklyBatchAverage
Parameters: getGrades: list of assessments to find grades for
            sectionAverage: list of grades, first assessment in the list of all assessments 
            weeklyBatchAverage: list of assessments for the week 

REFRESHDATATABLE 

This function is used to refresh the entire table to reflect any changes made by a user. This could be anything 
from adding an assessment, updating an assessment, or deleting an assessment. It queries for all the necessary
information again through the Apex controller, and then fills in the table with anything that is still needed. 
The methods called are already detailed in the "refresh" function above, so please reference that for a list of 
those. 

